<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class PluginsfDoctrineSimpleForumTopic extends BasesfDoctrineSimpleForumTopic
{
	public function getPostCount()
	{
		// create query
		$posts = Doctrine_Query::create()->from("sfDoctrineSimpleForumPost")
										  ->where("topic_id=?", $this->id)
										  ->count();
		return $posts;	
	}
	
	public function getLastPost()
	{
			$posts = Doctrine_Query::create()->from("sfDoctrineSimpleForumPost")
										  ->where("topic_id=?", $this->id)
										  ->orderBy("created_at DESC")
										  ->fetchOne();
			return $posts;	
	}
	
	public function getUnrepliedPosts()
	{
					$posts = Doctrine_Query::create()->from("sfDoctrineSimpleForumPost")
										  ->where("topic_id=?", $this->id)
										  ->orderBy("created_at DESC")
										  ->addWhere("is_reply_to_comment !=1")
										  ->execute();
			return $posts;	
	}
	
	// get sticked topics
	public function getSticked($forum_id)
	{	
		$topic = Doctrine_Query::create()->from("sfDoctrineSimpleForumTopic")
					  ->orderBy("created_at DESC")
					  ->addWhere("is_sticked = 1")
					  	->addWhere('forum_id = ?', $forum_id)
					  ->execute();
		return (count($topic)>0) ? $topic : array();
	}
	
	// get unsticked topics
	public function getUnsticked($forum_id)
	{
		
		$topic = Doctrine_Query::create()->from("sfDoctrineSimpleForumTopic")
					  ->orderBy("created_at DESC")
					  ->addWhere("is_sticked = 0")
					  ->addWhere('forum_id = ?', $forum_id)
					  ->execute();
		return (count($topic)>0) ? $topic : array();
	}

        // lock thread
        public function lock($status)
        {
            $this->setIsLocked($status);
            $this->save();
        }

        // sticky thread
        public function sticky($status)
        {
            $this->setIsSticked($status);
            $this->save();
        }
        public function deleteTopic()
        {
            $query = Doctrine_Query::create()->from("sfDoctrineSimpleForumTopic")
                                             ->where("id = ?", $this->getId())
                                              ->delete()
                                              ->execute();
        }
}